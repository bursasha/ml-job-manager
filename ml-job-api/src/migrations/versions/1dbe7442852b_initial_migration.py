"""Initial migration

Revision ID: 1dbe7442852b
Revises:
Create Date: 2025-04-19 15:40:03.534725

"""

from typing import (
    Sequence,
    Union,
)

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "1dbe7442852b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "jobs",
        sa.Column("job_id", sa.UUID(), nullable=False, comment="Job ID"),
        sa.Column("dir_path", sa.String(length=255), nullable=False, comment="Job directory path"),
        sa.Column(
            "type", sa.Enum("DATA_PREPROCESSING", "ACTIVE_ML", name="jobtype"), nullable=False, comment="Job type"
        ),
        sa.Column(
            "phase",
            sa.Enum("PENDING", "PROCESSING", "COMPLETED", "ERROR", "ABORTED", name="phasetype"),
            nullable=False,
            comment="Job phase",
        ),
        sa.Column("label", sa.String(length=50), nullable=False, comment="Job label"),
        sa.Column("description", sa.String(length=255), nullable=True, comment="Job description"),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False, comment="Job creation datetime"),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True, comment="Job execution start datetime"),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True, comment="Job execution end datetime"),
        sa.Column("execution_duration", sa.Float(), nullable=True, comment="Job execution duration"),
        sa.PrimaryKeyConstraint("job_id", name=op.f("pk__jobs")),
    )
    op.create_index(op.f("ix__jobs__created_at"), "jobs", ["created_at"], unique=False)
    op.create_table(
        "labellings",
        sa.Column("labelling_id", sa.UUID(), nullable=False, comment="Labelling ID"),
        sa.Column("job_id", sa.UUID(), nullable=False, comment="Job ID"),
        sa.Column("spectrum_filename", sa.String(length=70), nullable=False, comment="Spectrum filename"),
        sa.Column(
            "spectrum_set",
            sa.Enum("CANDIDATE", "PERFORMANCE_ESTIMATION", "ORACLE", name="spectrumsettype"),
            nullable=False,
            comment="Spectrum set",
        ),
        sa.Column("sequence_iteration", sa.Integer(), nullable=False, comment="Sequence iteration"),
        sa.Column("model_prediction", sa.String(length=30), nullable=True, comment="Model prediction"),
        sa.Column("user_label", sa.String(length=30), nullable=True, comment="User label"),
        sa.Column("user_comment", sa.String(length=50), nullable=True, comment="User comment"),
        sa.ForeignKeyConstraint(
            ["job_id"], ["jobs.job_id"], name=op.f("fk__labellings__job_id__jobs"), ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("labelling_id", name=op.f("pk__labellings")),
    )
    op.create_index(op.f("ix__labellings__job_id"), "labellings", ["job_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix__labellings__job_id"), table_name="labellings")
    op.drop_table("labellings")
    op.drop_index(op.f("ix__jobs__created_at"), table_name="jobs")
    op.drop_table("jobs")
    # ### end Alembic commands ###
